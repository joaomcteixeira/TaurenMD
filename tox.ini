[tox]
minversion = 3.14.0
#requires = 
#    setuptools >= 45.0.0
#    tox-conda >= 0.2
envlist =
    clean
    check
    radon
    docs
    py36
    py37
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    {py36}: {env:TOXPYTHON:python3.6}
    {py37,docs}: {env:TOXPYTHON:python3.7}
    {clean,check,radon,report,codecov,coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    COV_CORE_SOURCE={toxinidir}/src
    COV_CORE_CONFIG={toxinidir}/.coveragerc
    COV_CORE_DATAFILE={toxinidir}/.coverage.eager
passenv =
    *

[testenv:py36]
#usedevelop = false
#commands_pre = python setup.py develop --no-deps
#skip_install = true
#setenv =
#    PYTHONPATH={toxinidir}/tests
#    PYTHONUNBUFFERED=yes
#passenv =
#    *
user_develop = true
deps =
    pytest
    pytest-travis-fold
    pytest-cov
#converage
    bioplottemplates
    pyquaternion
conda_deps =
    mdanalysis
    mdtraj
    openmm
    matplotlib
conda_channels =
    conda-forge
    omnia
    defaults
commands =
    {posargs:pytest --cov --cov-report=term-missing --cov-append -vv tests}

[testenv:py37]
user_develop = true
deps = {[testenv:py36]deps}
conda_deps = {[testenv:py36]conda_deps}
conda_channels = {[testenv:py36]conda_channels}
commands = {[testenv:py36]commands}

[testenv:check]
deps =
    docutils
    check-manifest
    flake8>=3
    flake8-docstrings
    flake8-bugbear
    readme-renderer
    pygments
    isort
    bumpversion
#usedevelop = false
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py docs
    isort --verbose --check-only --diff --recursive src tests setup.py
    bumpversion --dry-run --verbose --allow-dirty patch
    bumpversion --dry-run --verbose --allow-dirty minor
    bumpversion --dry-run --verbose --allow-dirty major

[testenv:radon]
deps = radon
skip_install = true
commands = 
    radon cc -s --total-average --no-assert -nb src/
    radon mi -m -s src/

[testenv:docs]
usedevelop = true
#skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    #sphinx-build -b linkcheck docs dist/docs

[testenv:codecov]
depends = report
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:coveralls]
depends = report
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:report]
deps = coverage
skip_install = true
commands =
#coverage combine --append
    coverage html
    coverage report

[testenv:clean]
skip_install = true
deps = coverage
commands = coverage erase


# my favourite configuration for flake8 styling
# https://flake8.pycqa.org/en/latest/#
[flake8]
max_line_length = 80
hang-closing = true
ignore = 
    W293
    W503
    D412
    D105
per-file-ignores = setup.py:E501
docstring-convention = numpy
exclude = src/taurenmd/__init__.py

# configuration for the isort module
# https://github.com/timothycrosley/isort
[isort]
skip = __init__.py
line_length = 80
indent = 4
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
#known_future_library=future,pies
#known_standard_library=std,std2
known_first_party = taurenmd
known_third_party = 
    bioplottemplates
    MDAnalysis
    mdtraj
    numpy
    simtk
    pyquaternion
    pytest

[tool:pytest]
# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
norecursedirs =
    migrations

python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
testpaths =
    tests

