@article{Karplus1977,
abstract = {The dynamics of a folded globular protein (bovine pancreatic trypsin inhibitor) have been studied by solving the equations of motion for the atoms with an empirical potential energy function. The results provide the magnitude, correlations and decay of fluctuations about the average structure. These suggest that the protein interior is fluid-like in that the local atom motions have a diffusional character.},
author = {McCammon, J Andrew and Gelin, Bruce R and Karplus, Martin},
doi = {10.1038/267585a0},
issn = {0028-0836},
journal = {Nature},
keywords = {Structural Biology Molecular Dynamics},
month = {jun},
number = {5612},
pages = {585--590},
title = {{Dynamics of folded proteins}},
url = {https://www.nature.com/articles/267585a0.pdf{\%}0Ahttp://www.msg.ucsf.edu/BI204/Discussion/Q1/Jacobson/MacCammon{\_}1977.pdf http://www.nature.com/articles/267585a0},
volume = {267},
year = {1977}
}

@article{Hospital2019,
abstract = {New hardware, massively parallel and graphical processing unit-based computers in particular, has boosted molecular simulations to levels that would be unthinkable just a decade ago. At the classical level, it is now possible to perform atomistic simulations with systems containing over 10 million atoms and to collect trajectories extending to the millisecond range. Such achievements are moving biosimulations into the mainstream of structural biology research, complementary to the experimental studies. The drawback of this impressive development is the management of data, especially at a time where the inherent value of data is becoming more apparent. In this review, we summarize the main characteristics of (bio)simulation data, how we can store them, how they can be reused for new, unexpected projects, and how they can be transformed to make them FAIR (findable, accessible, interoperable and reusable). This article is categorized under: Molecular and Statistical Mechanics {\textgreater} Molecular Dynamics and Monte-Carlo Methods Computer and Information Science {\textgreater} Databases and Expert Systems Computer and Information Science {\textgreater} Visualization.},
author = {Hospital, Adam and Battistini, Federica and Soliva, Robert and Gelp{\'{i}}, Josep Lluis and Orozco, Modesto},
doi = {10.1002/wcms.1449},
issn = {17590884},
journal = {Wiley Interdisciplinary Reviews: Computational Molecular Science},
keywords = {Software Molecular Dynamics,Techniques Molecular Dynamics,database,molecular dynamics simulation,review,web-based graphical user interface},
number = {July 2019},
pages = {1--20},
title = {{Surviving the deluge of biosimulation data}},
year = {2019}
}


@article{Roe2013,
abstract = {We describe PTRAJ and its successor CPPTRAJ, two complementary, portable, and freely available computer programs for the analysis and processing of time series of three-dimensional atomic positions (i.e., coordinate trajectories) and the data therein derived. Common tools include the ability to manipulate the data to convert among trajectory formats, process groups of trajectories generated with ensemble methods (e.g., replica exchange molecular dynamics), image with periodic boundary conditions, create average structures, strip subsets of the system, and perform calculations such as RMS fitting, measuring distances, B-factors, radii of gyration, radial distribution functions, and time correlations, among other actions and analyses. Both the PTRAJ and CPPTRAJ programs and source code are freely available under the GNU General Public License version 3 and are currently distributed within the AmberTools 12 suite of support programs that make up part of the Amber package of computer programs (see http://ambermd.org). This overview describes the general design, features, and history of these two programs, as well as algorithmic improvements and new features available in CPPTRAJ. {\textcopyright} 2013 American Chemical Society.},
author = {Roe, Daniel R. and Cheatham, Thomas E.},
doi = {10.1021/ct400341p},
issn = {15499618},
journal = {Journal of Chemical Theory and Computation},
keywords = {Software Molecular Dynamics},
number = {7},
pages = {3084--3095},
pmid = {26583988},
title = {{PTRAJ and CPPTRAJ: Software for processing and analysis of molecular dynamics trajectory data}},
volume = {9},
year = {2013}
}



@article{mda1,
abstract = {MDAnalysis is an object-oriented library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. It is written in the Python language with some performance-critical code in C. It uses the powerful NumPy package to expose trajectory data as fast and efficient NumPy arrays. It has been tested on systems of millions of particles. Many common file formats of simulation packages including CHARMM, Gromacs, Amber, and NAMD and the Protein Data Bank format can be read and written. Atoms can be selected with a syntax similar to CHARMM's powerful selection commands. MDAnalysis enables both novice and experienced programmers to rapidly write their own analytical tools and access data stored in trajectories in an easily accessible manner that facilitates interactive explorative analysis. MDAnalysis has been tested on and works for most Unix-based platforms such as Linux and Mac OS X. It is freely available under the GNU General Public License from http://mdanalysis.googlecode.com.},
author = {Michaud-Agrawal, Naveen and Denning, Elizabeth J and Woolf, Thomas B and Beckstein, Oliver},
doi = {10.1002/jcc.21787},
issn = {1096-987X},
journal = {Journal of computational chemistry},
keywords = {Python programming language,Software - MDAnalysis,analysis,membrane systems,molecular dynamics simulations,object-oriented design,proteins,software},
month = {jul},
number = {10},
pages = {2319--27},
pmid = {21500218},
title = {{MDAnalysis: a toolkit for the analysis of molecular dynamics simulations.}},
url = {https://onlinelibrary.wiley.com/doi/full/10.1002/jcc.21787},
volume = {32},
year = {2011}
}

@InProceedings{mda2,
  author    = { {R}ichard {J}. {G}owers and {M}ax {L}inke and {J}onathan {B}arnoud and {T}yler {J}. {E}. {R}eddy and {M}anuel {N}. {M}elo and {S}ean {L}. {S}eyler and {J}an {D}omański and {D}avid {L}. {D}otson and {S}ébastien {B}uchoux and {I}an {M}. {K}enney and {O}liver {B}eckstein },
  title     = { {M}{D}{A}nalysis: {A} {P}ython {P}ackage for the {R}apid {A}nalysis of {M}olecular {D}ynamics {S}imulations },
  booktitle = { {P}roceedings of the 15th {P}ython in {S}cience {C}onference },
  pages     = { 98 - 105 },
  year      = { 2016 },
  editor    = { {S}ebastian {B}enthall and {S}cott {R}ostrup },
  doi       = { 10.25080/Majora-629e541a-00e },
  url = {http://conference.scipy.org/proceedings/scipy2016/oliver_beckstein.html}
}

@article{mdt,
abstract = {As molecular dynamics (MD) simulations continue to evolve into powerful computational tools for studying complex biomolecular systems, the necessity of flexible and easy-to-use software tools for the analysis of these simulations is growing. We have developed MDTraj, a modern, lightweight, and fast software package for analyzing MD simulations. MDTraj reads and writes trajectory data in a wide variety of commonly used formats. It provides a large number of trajectory analysis capabilities including minimal root-mean-square-deviation calculations, secondary structure assignment, and the extraction of common order parameters. The package has a strong focus on interoperability with the wider scientific Python ecosystem, bridging the gap between MD data and the rapidly growing collection of industry-standard statistical analysis and visualization tools in Python. MDTraj is a powerful and user-friendly software package that simplifies the analysis of MD data and connects these datasets with the modern interactive data science software ecosystem in Python.},
author = {McGibbon, Robert T and Beauchamp, Kyle A and Harrigan, Matthew P and Klein, Christoph and Swails, Jason M and Hern{\'{a}}ndez, Carlos X and Schwantes, Christian R and Wang, Lee-Ping and Lane, Thomas J and Pande, Vijay S},
doi = {10.1016/j.bpj.2015.08.015},
issn = {1542-0086},
journal = {Biophysical journal},
keywords = {Software - MDTraj},
month = {oct},
number = {8},
pages = {1528--32},
pmid = {26488642},
title = {{MDTraj: A Modern Open Library for the Analysis of Molecular Dynamics Trajectories.}},
url = {http://mdtraj.org/1.9.3/},
volume = {109},
year = {2015}
}

@article{Romo2014,
abstract = {LOOS (Lightweight Object Oriented Structure-analysis) is a C++ library designed to facilitate making novel tools for analyzing molecular dynamics simulations by abstracting out the repetitive tasks, allowing developers to focus on the scientifically relevant part of the problem. LOOS supports input using the native file formats of most common biomolecular simulation packages, including CHARMM, NAMD, Amber, Tinker, and Gromacs. A dynamic atom selection language based on the C expression syntax is included and is easily accessible to the tool-writer. In addition, LOOS is bundled with over 140 prebuilt tools, including suites of tools for analyzing simulation convergence, three-dimensional histograms, and elastic network models. Through modern C++ design, LOOS is both simple to develop with (requiring knowledge of only four core classes and a few utility functions) and is easily extensible. A python interface to the core classes is also provided, further facilitating tool development.},
author = {Romo, Tod D. and Leioatts, Nicholas and Grossfield, Alan},
doi = {10.1002/jcc.23753},
issn = {1096987X},
journal = {Journal of computational chemistry},
keywords = {Software LOSS,analysis,convergence,membranes,molecular dynamics,software},
number = {32},
pages = {2305--2318},
title = {{Lightweight object oriented structure analysis: tools for building tools to analyze molecular dynamics simulations}},
volume = {35},
year = {2014}
}


@article{pdbtools,
abstract = {The pdb-tools are a collection of Python scripts for working with molecular structure data in the Protein Data Bank (PDB) format. They allow users to edit, convert, and validate PDB files, from the command-line, in a simple but efficient manner. The pdb-tools are implemented in Python, without any external dependencies, and are freely available under the open-source Apache License at https://github.com/haddocking/pdb-tools/ and on PyPI.},
author = {Rodrigues, Jo{\~{a}}o P G L M and Teixeira, Jo{\~{a}}o M C and Trellet, Mika{\"{e}}l and Bonvin, Alexandre M J J},
doi = {10.12688/f1000research.17456.1},
issn = {2046-1402},
journal = {F1000Research},
keywords = {PDB,Python,bioinformatics,chemistry,macromolecules,protein structure,structural biology},
pages = {1961},
pmid = {30705752},
title = {pdb-tools: a swiss army knife for molecular structures.},
url = {https://f1000research.com/articles/7-1961/v1},
volume = {7},
year = {2018}
}

@article{OpenMM,
abstract = {OpenMM is a molecular dynamics simulation toolkit with a unique focus on extensibility. It allows users to easily add new features, including forces with novel functional forms, new integration algorithms, and new simulation protocols. Those features automatically work on all supported hardware types (including both CPUs and GPUs) and perform well on all of them. In many cases they require minimal coding, just a mathematical description of the desired function. They also require no modification to OpenMM itself and can be distributed independently of OpenMM. This makes it an ideal tool for researchers developing new simulation methods, and also allows those new methods to be immediately available to the larger community.},
author = {Eastman, Peter and Swails, Jason and Chodera, John D. and McGibbon, Robert T. and Zhao, Yutong and Beauchamp, Kyle A. and Wang, Lee Ping and Simmonett, Andrew C. and Harrigan, Matthew P. and Stern, Chaya D. and Wiewiora, Rafal P. and Brooks, Bernard R. and Pande, Vijay S.},
doi = {10.1371/journal.pcbi.1005659},
isbn = {1111111111},
issn = {15537358},
journal = {PLoS Computational Biology},
keywords = {Software - Molecular Dynamics,Software - OpenMM},
number = {7},
pages = {1--17},
title = {{OpenMM 7: Rapid development of high performance algorithms for molecular dynamics}},
volume = {13},
year = {2017}
}

@Techreport{CS-R9526, title= {Python tutorial}, author = {G. van Rossum}, number={CS-R9526}, institution= {Centrum voor Wiskunde en Informatica (CWI)}, year= {1995}, address={Amsterdam}, month={May} }

@misc{pypitaurenmd,
author = {taurenmd},
booktitle = {taurenmd PyPI Package},
pages = {latest},
title = {{PyPI Package}},
url = {https://pypi.org/project/taurenmd/},
year = {2020}
}

@misc{cc,
author = {Ionel Cristian Mărieș},
booktitle = {cookiecutter-pylibrary},
title = {{cookiecutter-pylibrary}},
url = {https://github.com/ionelmc/cookiecutter-pylibrary},
year={2019}
}

@article{VMD,
author={William Humphrey and Andrew Dalke and Klaus Schulten},
title={{VMD} -- {V}isual {M}olecular {D}ynamics},
journal={Journal of Molecular Graphics},
year=1996,
doi={10.1016/0263-7855(96)00018-5}
volume=14,
pages={33-38},
note={},
tbstatus={Published.},
techrep={},
tbreference={222}
}

@article{PLUMED,
title = {{PLUMED}: {A} portable plugin for free-energy calculations with molecular dynamics},
volume = {180},
issn = {0010-4655},
shorttitle = {{PLUMED}},
url = {http://www.sciencedirect.com/science/article/pii/S001046550900157X},
doi = {10.1016/j.cpc.2009.05.011},
abstract = {Here we present a program aimed at free-energy calculations in molecular systems. It consists of a series of routines that can be interfaced with the most popular classical molecular dynamics (MD) codes through a simple patching procedure. This leaves the possibility for the user to exploit many different MD engines depending on the system simulated and on the computational resources available. Free-energy calculations can be performed as a function of many collective variables, with a particular focus on biological problems, and using state-of-the-art methods such as metadynamics, umbrella sampling and Jarzynski-equation based steered MD. The present software, written in ANSI-C language, can be easily interfaced with both Fortran and C/C++ codes.
Program summary
Program title: PLUMED Catalogue identifier: AEEE\_v1\_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEEE\_v1\_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Lesser GPL No. of lines in distributed program, including test data, etc.: 107 505 No. of bytes in distributed program, including test data, etc.: 2 052 759 Distribution format: tar.gz Programming language: ANSI-C Computer: Any computer capable of running an executable produced by GCC compiler Operating system: Linux/Unix RAM: Depending on the number of atoms, the method chosen and the collective variables used Classification: 23 External routines: Must be interfaced with a MD code (such as GROMACS, NAMD, DL\_POLY or SANDER). Nature of problem: Calculation of free-energy surfaces for biological and condensed matter systems. Solution method: Implementation of various enhanced sampling techniques. Unusual features: PLUMED is not a stand-alone program but it must be interfaced with a MD code (such as GROMACS, NAMD, DL\_POLY or SANDER) that needs to be recompiled. Each interface is provided in a patch form. Running time: Depending on the number of atoms, the method chosen and the collective variables used.},
language = {en},
number = {10},
urldate = {2020-05-23},
journal = {Computer Physics Communications},
author = {Bonomi, Massimiliano and Branduardi, Davide and Bussi, Giovanni and Camilloni, Carlo and Provasi, Davide and Raiteri, Paolo and Donadio, Davide and Marinelli, Fabrizio and Pietrucci, Fabio and Broglia, Ricardo A. and Parrinello, Michele},
month = oct,
year = {2009},
keywords = {Free energy, Metadynamics, Molecular dynamics, Proteins, Umbrella sampling},
pages = {1961--1972},
file = {ScienceDirect Full Text PDF:/home/joao/Zotero/storage/EHZ3B99X/Bonomi et al. - 2009 - PLUMED A portable plugin for free-energy calculat.pdf:application/pdf}
}

@article{GROMACS,
title = {{GROMACS}: {High} performance molecular simulations through multi-level parallelism from laptops to supercomputers},
volume = {1-2},
issn = {2352-7110},
shorttitle = {{GROMACS}},
url = {http://www.sciencedirect.com/science/article/pii/S2352711015000059},
doi = {10.1016/j.softx.2015.06.001},
abstract = {GROMACS is one of the most widely used open-source and free software codes in chemistry, used primarily for dynamical simulations of biomolecules. It provides a rich set of calculation types, preparation and analysis tools. Several advanced techniques for free-energy calculations are supported. In version 5, it reaches new performance heights, through several new and enhanced parallelization algorithms. These work on every level; SIMD registers inside cores, multithreading, heterogeneous CPU–GPU acceleration, state-of-the-art 3D domain decomposition, and ensemble-level parallelization through built-in replica exchange and the separate Copernicus framework. The latest best-in-class compressed trajectory storage format is supported.},
language = {en},
urldate = {2020-05-23},
journal = {SoftwareX},
author = {Abraham, Mark James and Murtola, Teemu and Schulz, Roland and Páll, Szilárd and Smith, Jeremy C. and Hess, Berk and Lindahl, Erik},
month = sep,
year = {2015},
keywords = {Free energy, GPU, Molecular dynamics, SIMD},
pages = {19--25},
file = {ScienceDirect Full Text PDF:/home/joao/Zotero/storage/EKHN9Q7U/Abraham et al. - 2015 - GROMACS High performance molecular simulations th.pdf:application/pdf}
}

@misc{PYTRAJ,
author = {Hai Nguyen, Daniel R. Roe, Jason Swails, David A. Case},
booktitle = {pytraj},
title = {{pytraj}},
url = {https://github.com/Amber-MD/pytraj},
year={2016}
}

@misc{MDAPYMOL, author = {Paul Smith, Mat Bieniek},
booktitle = {MD Trajectories in PyMOL: No Memory Limits},
title = {{MD Trajectories in PyMOL: No Memory Limits}},
url = {https://nms.kcl.ac.uk/lorenz.lab/wp/?p=1768},
year={2019}
}
